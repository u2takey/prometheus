# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']
  - job_name: 'example_bosun'
    scrape_interval: '60s'
    bosun_rule: 'avg(q("avg:store:toutiao.service.thrift.ad.platform.sirius.GetOptLogTask.calledby.success.latency.us.pct99", "5m", "1m"))'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: [ 'example_bosun_cn' ]
  - job_name: 'opt_log_count'
    scrape_interval: '300s'
    bosun_rule: 'sum(q("sum:rate{counter,,,diff}:toutiao.service.thrift.ad.platform.sirius.OptLogWrite.calledby.success.throughput", "1440m", "1m"))'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: [ 'example_bosun_cn' ]

